[tool.poetry]
name = "anomaly-detection"
version = "0.1.0"
description = ""
authors = ["Anton Morozov <morozov1101@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "anomaly_detection"}]

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.6.0"
flake8-pyproject = "^1.2.3"

[tool.flake8]
ignore = ['E203', 'E501', 'W503', 'B950']
max-line-length = 90
max-complexity = 12
select = ['B', 'C', 'E', 'F', 'W', 'B9']
per-file-ignores = [
    '__init__.py:F401']

[tool.black]
line-length = 90
target-version = ["py39"]
#skip-string-normalization = true

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 90
lines_after_imports = 2

[tool.pylint.messages_control]
disable = "C0114,C0116, E0401, C0103, R0914, E0402, R1725, R0201, E1120, W0106, E0611"

[tool.pylint.format]
max-line-length = "90"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
